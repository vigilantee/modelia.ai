version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: ai-studio-db
    environment:
      POSTGRES_DB: ai_studio
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ai-studio-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-studio-backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/ai_studio
      JWT_SECRET: ${JWT_SECRET:-change-this-in-production}
      JWT_EXPIRES_IN: 7d
      UPLOAD_DIR: /app/uploads
      MAX_FILE_SIZE: 10485760
    ports:
      - "3001:3001"
    volumes:
      - ./backend/uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ai-studio-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-studio-frontend
    environment:
      VITE_API_URL: http://localhost:3001
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - ai-studio-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  ai-studio-network:
    driver: bridge
