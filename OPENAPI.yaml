openapi: 3.0.0
info:
  title: AI Studio API
  description: API for AI-powered image generation studio
  version: 1.0.0
  contact:
    email: frontend@modelia.ai

servers:
  - url: http://localhost:3001/api
    description: Development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
          format: email
        createdAt:
          type: string
          format: date-time

    Generation:
      type: object
      properties:
        id:
          type: integer
        status:
          type: string
          enum: [processing, completed, failed]
        prompt:
          type: string
        style:
          type: string
          enum: [realistic, artistic, vintage, modern]
        inputImageUrl:
          type: string
        outputImageUrl:
          type: string
          nullable: true
        errorMessage:
          type: string
          nullable: true
        retryCount:
          type: integer
        createdAt:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time
          nullable: true

    Error:
      type: object
      properties:
        error:
          type: string
        status:
          type: integer

paths:
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 6
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
                  token:
                    type: string
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "409":
          description: User already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /auth/login:
    post:
      summary: Login existing user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
                  token:
                    type: string
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /auth/me:
    get:
      summary: Get current user
      tags:
        - Authentication
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User information
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /generations:
    post:
      summary: Create a new generation
      tags:
        - Generations
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - image
                - prompt
                - style
              properties:
                image:
                  type: string
                  format: binary
                  description: JPEG or PNG image (max 10MB)
                prompt:
                  type: string
                  maxLength: 500
                style:
                  type: string
                  enum: [realistic, artistic, vintage, modern]
      responses:
        "201":
          description: Generation started
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  generation:
                    $ref: "#/components/schemas/Generation"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /generations/recent:
    get:
      summary: Get recent generations
      tags:
        - Generations
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 5
            maximum: 10
      responses:
        "200":
          description: List of generations
          content:
            application/json:
              schema:
                type: object
                properties:
                  generations:
                    type: array
                    items:
                      $ref: "#/components/schemas/Generation"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /generations/{id}:
    get:
      summary: Get generation by ID
      tags:
        - Generations
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Generation details
          content:
            application/json:
              schema:
                type: object
                properties:
                  generation:
                    $ref: "#/components/schemas/Generation"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Generation not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
