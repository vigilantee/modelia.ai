name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: ai_studio_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        # UPGRADE: v3 -> v4
        uses: actions/checkout@v4

      - name: Setup Node.js
        # UPGRADE: v3 -> v4
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          # NOTE: Removed cache-dependency-path to avoid the previous unresolved path error
          # when using the built-in cache with actions/setup-node@v4,
          # as the `npm ci` step is in a subdirectory.
          # cache: "npm"

      - name: Install dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run linter
        working-directory: ./backend
        run: npm run lint

      - name: Run tests
        working-directory: ./backend
        run: npm test
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ai_studio_test
          JWT_SECRET: test-secret-key
          NODE_ENV: test

      - name: Upload coverage
        # Already at v4, kept:
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/coverage

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        # UPGRADE: v3 -> v4
        uses: actions/checkout@v4

      - name: Setup Node.js
        # UPGRADE: v3 -> v4
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          # NOTE: Removed cache-dependency-path for the same reason as backend-tests
          # cache: "npm"

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run linter
        working-directory: ./frontend
        run: npm run lint

      - name: Run tests
        working-directory: ./frontend
        run: npm test

      - name: Upload coverage
        # Already at v4, kept:
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/coverage

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: ai_studio_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        # UPGRADE: v3 -> v4
        uses: actions/checkout@v4

      - name: Setup Node.js
        # UPGRADE: v3 -> v4
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Install Playwright
        working-directory: ./frontend
        run: npx playwright install --with-deps

      - name: Start backend
        working-directory: ./backend
        run: npm run dev &
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ai_studio_test
          JWT_SECRET: test-secret-key
          PORT: 3001

      - name: Start frontend
        working-directory: ./frontend
        run: npm run dev &
        env:
          VITE_API_URL: http://localhost:3001

      - name: Wait for servers
        run: |
          npx wait-on http://localhost:3001/api/health
          npx wait-on http://localhost:3000

      - name: Run E2E tests
        working-directory: ./frontend
        run: npx playwright test

      - name: Upload E2E results
        if: always()
        # Already at v4, kept:
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: frontend/playwright-report
